apply plugin: 'com.android.application'

project.archivesBaseName = "TTW";

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    defaultConfig {
        applicationId "org.codechimp.ttw"
        minSdkVersion 19
        targetSdkVersion 27
        versionName project.VERSION_NAME
        versionCode Integer.parseInt(project.VERSION_CODE)
    }

    signingConfigs { release }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "TTW-${variant.name}-${project.VERSION_NAME}.apk"
        }
    }
}

configurations {
    wear1Release
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':locale-api')

    wear1Release project(path: ':wear', configuration: 'wear1Release')

    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.google.android.gms:play-services-wearable:11.8.0'
    implementation 'com.android.support:support-v4:27.0.2'
}

// Signing properties goes in project root (NOT app)
def Properties props = new Properties()
def propFile = new File('signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'signing.properties not found'
    android.buildTypes.release.signingConfig = null
}